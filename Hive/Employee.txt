hdfs dfs -mkdir -p /user/hive/employee_data
hdfs dfs -put employee.csv /user/hive/employee_data/
hdfs dfs -put salary.csv /user/hive/employee_data/


-- Drop existing tables if they exist
DROP TABLE IF EXISTS employee;
DROP TABLE IF EXISTS emp_salary;
DROP TABLE IF EXISTS employee_ext;

-- Create the managed table for employees
CREATE TABLE employee (
    EmpID INT,
    EmpName STRING,
    EmpDesignation STRING,
    Dept STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE;

-- Create managed table for salary info
CREATE TABLE emp_salary (
    EmpID INT,
    Salary DOUBLE,
    Leaves_Taken INT
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE;

-- Alter employee table to add a new column: Email
ALTER TABLE employee ADD COLUMNS (Email STRING);

-- Create external table for employee (for illustration)
CREATE EXTERNAL TABLE employee_ext (
    EmpID INT,
    EmpName STRING,
    EmpDesignation STRING,
    Dept STRING
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
STORED AS TEXTFILE
LOCATION '/user/hive/employee_data/';

-- Load data from HDFS into employee and emp_salary tables
LOAD DATA INPATH '/user/hive/employee_data/employee.csv' INTO TABLE employee;
LOAD DATA INPATH '/user/hive/employee_data/salary.csv' INTO TABLE emp_salary;

-- Insert individual records
INSERT INTO TABLE employee VALUES (104, 'Alice Paul', 'Analyst', 'Finance', 'alice@company.com');
INSERT INTO TABLE emp_salary VALUES (104, 62000.0, 5);

-- JOIN query: combine employee info with salary and leave data
SELECT 
    e.EmpID,
    e.EmpName,
    e.EmpDesignation,
    e.Dept,
    e.Email,
    s.Salary,
    s.Leaves_Taken
FROM 
    employee e
JOIN 
    emp_salary s
ON 
    e.EmpID = s.EmpID;
